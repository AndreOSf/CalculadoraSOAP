//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Calculadora_Client.Calculadora {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://exemplosoap/", ConfigurationName="Calculadora.Calculadora_Server")]
    public interface Calculadora_Server {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exemplosoap/Calculadora_Server/somaRequest", ReplyAction="http://exemplosoap/Calculadora_Server/somaResponse")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        float soma(float arg0, float arg1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exemplosoap/Calculadora_Server/somaRequest", ReplyAction="http://exemplosoap/Calculadora_Server/somaResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<float> somaAsync(float arg0, float arg1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exemplosoap/Calculadora_Server/multiplicacaoRequest", ReplyAction="http://exemplosoap/Calculadora_Server/multiplicacaoResponse")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        float multiplicacao(float arg0, float arg1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exemplosoap/Calculadora_Server/multiplicacaoRequest", ReplyAction="http://exemplosoap/Calculadora_Server/multiplicacaoResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<float> multiplicacaoAsync(float arg0, float arg1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exemplosoap/Calculadora_Server/subtracaoRequest", ReplyAction="http://exemplosoap/Calculadora_Server/subtracaoResponse")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        float subtracao(float arg0, float arg1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exemplosoap/Calculadora_Server/subtracaoRequest", ReplyAction="http://exemplosoap/Calculadora_Server/subtracaoResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<float> subtracaoAsync(float arg0, float arg1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exemplosoap/Calculadora_Server/divisaoRequest", ReplyAction="http://exemplosoap/Calculadora_Server/divisaoResponse")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        float divisao(float arg0, float arg1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exemplosoap/Calculadora_Server/divisaoRequest", ReplyAction="http://exemplosoap/Calculadora_Server/divisaoResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<float> divisaoAsync(float arg0, float arg1);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface Calculadora_ServerChannel : Calculadora_Client.Calculadora.Calculadora_Server, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Calculadora_ServerClient : System.ServiceModel.ClientBase<Calculadora_Client.Calculadora.Calculadora_Server>, Calculadora_Client.Calculadora.Calculadora_Server {
        
        public Calculadora_ServerClient() {
        }
        
        public Calculadora_ServerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Calculadora_ServerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Calculadora_ServerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Calculadora_ServerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public float soma(float arg0, float arg1) {
            return base.Channel.soma(arg0, arg1);
        }
        
        public System.Threading.Tasks.Task<float> somaAsync(float arg0, float arg1) {
            return base.Channel.somaAsync(arg0, arg1);
        }
        
        public float multiplicacao(float arg0, float arg1) {
            return base.Channel.multiplicacao(arg0, arg1);
        }
        
        public System.Threading.Tasks.Task<float> multiplicacaoAsync(float arg0, float arg1) {
            return base.Channel.multiplicacaoAsync(arg0, arg1);
        }
        
        public float subtracao(float arg0, float arg1) {
            return base.Channel.subtracao(arg0, arg1);
        }
        
        public System.Threading.Tasks.Task<float> subtracaoAsync(float arg0, float arg1) {
            return base.Channel.subtracaoAsync(arg0, arg1);
        }
        
        public float divisao(float arg0, float arg1) {
            return base.Channel.divisao(arg0, arg1);
        }
        
        public System.Threading.Tasks.Task<float> divisaoAsync(float arg0, float arg1) {
            return base.Channel.divisaoAsync(arg0, arg1);
        }
    }
}
